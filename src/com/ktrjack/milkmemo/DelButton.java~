package com.ktrjack.milkmemo;

import android.app.Activity;
import android.app.ActionBar;
import android.app.FragmentTransaction;
import android.app.AlertDialog;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.TextView;
import android.widget.Toast;

import android.content.Intent;
import android.content.DialogInterface;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
//import android.content.res.Resources;
import java.util.*;
/**
 *  データヒストリーをリスト表示するフラグメントタブ
 *
 */
public class DelButton extends Activity {
//public class DelButton extends Fragment {

	//DBオブジェクト
	private SQLiteDatabase db;
	private ButtonDbBeans dbbeans;

	//String[][] arButton;
		
	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);

	//	Activity ac = this.getActivity();
		setContentView(R.layout.del_button_main);

		String[][] arButton;

		StringBuffer tmp;
		
		//DBオブジェクト生成
		dbbeans = new ButtonDbBeans(this);
		db = dbbeans.getWritableDatabase();
		
		//DBオブジェクトセット
		dbbeans.setDatabase(db);
		
		//配列型での取得
		arButton = dbbeans.arSelectButtonMaster();
		db.close();
		
		if( arButton != null){
	    		//現在いるタブビューのIDで指定してやる（ハマった）
	    		ListView btnList = (ListView)this.findViewById(R.id.lvButton);
	    		//ArrayAdapterの第一引数は現在のタブのコンテキスト
			ListAdapter la = (ListAdapter) new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, arButton[1]);
			//現在のタブビューにセット
			btnList.setAdapter(la);

			// Create long-click event object.
			ButtonMasterLongClick lc = new ButtonMasterLongClick(arButton, this);
			
			// Set lomg-click event to view.	
			btnList.setOnItemLongClickListener(lc);
		}
		
		//return inputTab;
	}
	

}
/**
 *  リスト要素のロングクリック時イベント
 *
 *	@param String[][] arButton	DBから取得したid、buttonNameの2次元配列
 *	@param Activity ac		画面再描画のためのメインアクティビティインスタンス
 */
class ButtonMasterLongClick implements OnItemLongClickListener{
	private String[][] arButton;
	private Activity ac;
	//private FragmentActivity fa;

	//コンストラクタ　引数の配列をインスタントメンバーにセットする
	//メインリストに次元配列とメインアクティビティ
	public ButtonMasterLongClick(final String[][] arButton, final Activity ac){
	//public ButtonMasterLongClick(final String[][] arButton, final FragmentActivity fa){

		this.arButton = arButton;
		this.ac = ac;
		//this.fa = fa;
	}
	/**
	* 各体重リストのロングクリック時のintentを書く
	* 
	* */
	@Override
	public boolean onItemLongClick(AdapterView<?> parent, View buttonList, int position, long id) {
		// TODO Auto-generated method stub
		System.out.println("Dell");
		ListView listView = (ListView) parent;
		
		String item = listView.getItemAtPosition(position).toString();
        	
		FragmentActivity fa = new FragmentActivity();
		//FragmentActivity fa = this.getActivity();
		//FragmentActivity fa = (FragmentActivity)ac;
		//getFragmentManagerFragmentActivity fa = ac;
		// 各リストアイテムを半角スペースで分割 
		//String[] arItem = item.split(" ", 0);
		
		//日と時間を変数に格納
		//String datetime = arItem[1] + arItem[2];

		//テーブルIDの取得
		String dbid = arButton[0][(int)id];

		//ボタン名を配列に格納
		String buttonName = item;
	
		//System.out.println(dbid);
		//アラートダイアログ生成
		DelButtonDialogFragment delDialog = new DelButtonDialogFragment(buttonList, listView, ac, id, dbid, buttonName);
		//DelButtonDialogFragment delDialog = new DelButtonDialogFragment(buttonList, listView, fa, id, dbid, buttonName);
		//delDialog.show(fa.getSupportFragmentManager(), "Delete Data"); 
		delDialog.show(ac.getFragmentManager(),"Delete Data"); 
		return false; 
	}
}
